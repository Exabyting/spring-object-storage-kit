plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0' apply false
    id 'io.spring.dependency-management' version '1.1.+'
    id 'jacoco'
}

group = 'com.exabyting.springosk'
version = '0.1.0'

repositories {
    mavenCentral()
}

ext {
    set("awsSdkVersion", "2.+")
    set("lombokVersion", "1.18.+")
    set("springBootVersion", "3.+")
    set("testcontainersVersion", "1.21.+") // Updated version
    set("junitPlatformVersion", "1.12.+")
    set("minioVersion", "8.5.+")
    set("lang3Version", "3.+")
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

dependencies {
    // Spring Boot autoconfiguration support
    implementation("org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}")
    implementation("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    implementation("org.springframework.boot:spring-boot-starter-validation:${springBootVersion}")
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}")
    implementation platform("software.amazon.awssdk:bom:${awsSdkVersion}")
    implementation('software.amazon.awssdk:s3')
    implementation('software.amazon.awssdk:apache-client')
    // https://mvnrepository.com/artifact/io.minio/minio
    implementation("io.minio:minio:${minioVersion}")
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation("org.apache.commons:commons-lang3:${lang3Version}")

    testImplementation("org.testcontainers:junit-jupiter:${testcontainersVersion}")
    testImplementation("org.testcontainers:testcontainers:${testcontainersVersion}")
    testImplementation("org.testcontainers:localstack:${testcontainersVersion}")
    testImplementation("org.testcontainers:minio:${testcontainersVersion}")
    testImplementation("org.springframework.boot:spring-boot-testcontainers:${springBootVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    // JUnit 5 Suite dependency for @Suite, @SelectPackages, etc.
    testImplementation("org.junit.platform:junit-platform-suite:${junitPlatformVersion}")
    // Configuration processor for metadata (helps with auto-complete in application.yml/properties)
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
    finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.70 // 70% minimum coverage
            }
        }
    }
}